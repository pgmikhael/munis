# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files
[metadata]
name = munis
description = Munis
author = Jeremy Wohlwend
author_email = jeremy.wohlwend@gmail.com
license_file = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://munis.ai/
project_urls =
    Documentation = https://munis.ai/docs
    Source = https://github.com/jwohlwend/munis/
    Tracker = https://github.com/jwohlwend/munis/issues


# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Programming Language :: Python

[options]
zip_safe = False
package_dir =
    =munis
packages = find:
include_package_data = True
python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"


[options.packages.find]
where = munis
exclude =
    tests


[options.extras_require]
# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov
    flake8
    mypy
    black

[options.entry_points]
console_scripts =
    munis = munis.main:main


[bdist_wheel]
# Use this option if your package is pure-python
universal = 1


[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel


[tool:pytest]
norecursedirs =
    .git
    dist
    build
    .tox
addopts =
    --cov munis --cov-report term-missing
    --verbose
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[flake8]
max-line-length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude = 
    .tox
    *.egg
    build
    temp
    docs/*
    tests/*
    dist

[mypy]
ignore_missing_imports = True
allow_redefinition = True
; follow_imports = skip
; warn_unused_configs = True
